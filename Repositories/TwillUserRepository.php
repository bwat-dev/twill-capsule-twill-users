<?php

namespace App\Twill\Capsules\TwillUsers\Repositories;

use A17\Twill\Repositories\Behaviors\HandleMedias;
use A17\Twill\Repositories\Behaviors\HandleFiles;
use A17\Twill\Repositories\ModuleRepository;
use App\Twill\Capsules\TwillUsers\Models\TwillUser;
use Illuminate\Auth\Passwords\PasswordBrokerManager;
class TwillUserRepository extends ModuleRepository
{
    use HandleMedias, HandleFiles;

    public function __construct(TwillUser $model, PasswordBrokerManager $brokerManager)
    {
        $this->model = $model;
    }

    public function filter($query, array $scopes = [])
    {
        $query->when(isset($scopes['role']), function ($query) use ($scopes) {
            $query->where('role', $scopes['role']);
        });
        $query->where('role', '<>', 'SUPERADMIN');
        $this->searchIn($query, $scopes, 'search', ['name', 'email', 'role']);
        return parent::filter($query, $scopes);
    }

    public function prepareFieldsBeforeCreate($fields)
    {
        $fields['password'] = bcrypt($fields['password']);
        return parent::prepareFieldsBeforeCreate($fields); // TODO: Change the autogenerated stub
    }

    public function prepareFieldsBeforeSave($object, $fields)
    {
        if(isset($fields['new_password']) && !empty($fields['new_password'])) {
            $fields['password'] = bcrypt($fields['new_password']);
        }
        return parent::prepareFieldsBeforeSave($object, $fields); // TODO: Change the autogenerated stub
    }
}
